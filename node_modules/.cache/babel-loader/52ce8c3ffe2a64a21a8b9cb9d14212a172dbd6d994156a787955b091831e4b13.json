{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"v_slider\"\n};\nconst _hoisted_2 = {\n  class: \"v_slider__list\",\n  ref: \"list\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"v_slider__dots\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"span\", null, null, -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_5];\nconst _hoisted_7 = [\"innerHTML\"];\nconst _hoisted_8 = [\"innerHTML\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"v_slider__track\",\n    ref: \"track\",\n    style: _normalizeStyle({\n      width: $data.width.track + 'px',\n      transform: 'translate(-' + $data.transform + 'px)',\n      transition: 'transform ' + $data.settings.timing + ' ' + $data.settings.speed + 'ms'\n    })\n  }, [_renderSlot(_ctx.$slots, \"default\")], 4 /* STYLE */)], 512 /* NEED_PATCH */), $props.dots ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.numDot, n => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      onClick: $event => $options.setDot(n),\n      class: _normalizeClass({\n        'active': n == $data.numDotActive\n      })\n    }, _hoisted_6, 10 /* CLASS, PROPS */, _hoisted_4);\n  }), 256 /* UNKEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $props.nav ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    class: \"v_slider__prev\",\n    innerHTML: $props.prevNav,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.prevSlide && $options.prevSlide(...args))\n  }, null, 8 /* PROPS */, _hoisted_7)) : _createCommentVNode(\"v-if\", true), $props.nav ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    class: \"v_slider__next\",\n    innerHTML: $props.nextNav,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.nextSlide && $options.nextSlide(...args))\n  }, null, 8 /* PROPS */, _hoisted_8)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC,gBAAgB;EAACC,GAAG,EAAC;;;;EAKhBD,KAAK,EAAC;;;gCAGlBE,oBAAa;oBAAbC,UAAa;;;;uBATnBC,oBAeM,OAfNC,UAeM,GAdJH,oBAIM,OAJNI,UAIM,GAHJJ,oBAEM;IAFDF,KAAK,EAAC,iBAAiB;IAACC,GAAG,EAAC,OAAO;IAAEM,KAAK;MAAAC,OAAUC,WAAK,CAACC,KAAK;MAAAC,2BAAoCF,eAAS;MAAAG,2BAAqCH,cAAQ,CAACI,MAAM,SAASJ,cAAQ,CAACK,KAAK;IAAA;MAC1LC,YAAaC,kEAGPC,WAAI,kBAAdb,oBAKK,MALLc,UAKK,sBAHHd,oBAEKe,6BAFWV,YAAM,EAAXW,CAAC;yBAAZhB,oBAEK;MAFoBiB,OAAK,YAAEC,eAAM,CAACF,CAAC;MAAIpB,KAAK;QAAA,UAAaoB,CAAC,IAAIX;MAAY;;2EAKnEQ,UAAG,kBAAjBb,oBAAuF;;IAApEJ,KAAK,EAAC,gBAAgB;IAACuB,SAAgB,EAARN,cAAO;IAAGI,OAAK,yCAAEC,iDAAS;4EAC9DL,UAAG,kBAAjBb,oBAAuF;;IAApEJ,KAAK,EAAC,gBAAgB;IAACuB,SAAgB,EAARN,cAAO;IAAGI,OAAK,yCAAEC,iDAAS","names":["class","ref","_createElementVNode","_hoisted_5","_createElementBlock","_hoisted_1","_hoisted_2","style","width","$data","track","transform","transition","timing","speed","_renderSlot","_ctx","$props","_hoisted_3","_Fragment","n","onClick","$options","innerHTML"],"sourceRoot":"","sources":["C:\\Users\\Anton\\Desktop\\AntonAnyfriev\\kubsu\\src\\components\\Rewiews.vue"],"sourcesContent":["<template>\r\n  <div class=\"v_slider\">\r\n    <div class=\"v_slider__list\" ref=\"list\">\r\n      <div class=\"v_slider__track\" ref=\"track\" :style=\"{width: width.track + 'px', transform: 'translate(-' + transform + 'px)', transition: 'transform ' + settings.timing + ' ' + settings.speed + 'ms'}\">\r\n        <slot></slot>\r\n      </div>\r\n    </div>\r\n    <ul v-if=\"dots\" class=\"v_slider__dots\">\r\n\r\n      <li v-for=\"n in numDot\" @click=\"setDot(n)\" :class=\"{'active': n == numDotActive}\">\r\n        <span></span>\r\n      </li>\r\n    </ul>\r\n\r\n    <button v-if=\"nav\" class=\"v_slider__prev\" v-html=\"prevNav\" @click=\"prevSlide\"></button>\r\n    <button v-if=\"nav\" class=\"v_slider__next\" v-html=\"nextNav\" @click=\"nextSlide\"></button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'slider',\r\n  props: {\r\n    // Количество слайдов на странице\r\n    items: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    // Отступы\r\n    margin: {\r\n      type: Number,\r\n      default: 20\r\n    },\r\n    // Навигация\r\n    nav: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // Точечная навигация\r\n    dots: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // Перемотка\r\n    loop: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // Кнопка назад\r\n    prevNav: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    // Кнопка веред\r\n    nextNav: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    // Скорость перелистывания (мс)\r\n    speed: {\r\n      type: Number,\r\n      default: 300\r\n    },\r\n    // Анимация перехода (linear, ease-in, ease-out, ease-in-out)\r\n    timing: {\r\n      type: String,\r\n      default: 'ease'\r\n    },\r\n    // Количество смещаемых слайдов\r\n    offset: {\r\n      type: Number,\r\n      default: 1\r\n    },\r\n    // Переключение слайдов соседними блоками\r\n    sibling: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    // Адаптивность\r\n    responsive: {\r\n      type: Object,\r\n      default: {}\r\n    },\r\n  },\r\n  data () {\r\n    return {\r\n      el: {\r\n        track: null,\r\n        slides: null,\r\n      },\r\n      width: {\r\n        document: 0,\r\n        container: 0,\r\n        slide: 0,\r\n        track: 0\r\n      },\r\n      // Первый слайд\r\n      itemActive: 0,\r\n      // Общее количество реальных слайдов\r\n      numItemReal: 0,\r\n      // Общее количество слайдов с клонами\r\n      numItemAll: 0,\r\n      // Список медиа запросов\r\n      breakpoints: [],\r\n      // Количество\r\n      numDot: 0,\r\n      // Активный дот\r\n      numDotActive: 0,\r\n      // Сдвиг по оси Y\r\n      transform: 0,\r\n      // Свойства слайдера\r\n      settings: {\r\n        items: this.items,\r\n        margin: this.margin,\r\n        nav: this.nav,\r\n        dots: this.dots,\r\n        loop: this.loop,\r\n        prevNav: this.prevNav,\r\n        nextNav: this.nextNav,\r\n        speed: this.speed,\r\n        timing: this.timing,\r\n        offset: this.offset,\r\n        responsive: this.responsive\r\n      },\r\n      // Флаг назатия мыши\r\n      mouseDown: false,\r\n\r\n      // Дистанция для свайпа\r\n      swipeDistance: 50,\r\n      // Дистанция перемещения курсора\r\n      dragDistance: 0\r\n    }\r\n  },\r\n  mounted () {\r\n    this.$nextTick(function () {\r\n      // Объект контейнера\r\n      this.el.list = this.$refs.list\r\n      // Объект трека\r\n      this.el.track = this.$refs.track\r\n\r\n      // Объекты слайдов\r\n      this.el.slides = this.el.track.children\r\n      // Вычисление количества слайдов\r\n      this.numItemReal = this.el.slides.length\r\n      // Присваиваем класс слайдам\r\n      for (let i = 0; i < this.numItemReal; ++i) {\r\n        this.el.slides[i].classList.add('v_slider__item')\r\n      }\r\n      // Добавляем клоны\r\n      if (this.settings.loop) {\r\n        let lastSlide = this.el.track.getElementsByClassName('v_slider__item')\r\n        for (let i = 0; i < this.numItemReal; ++i) {\r\n          let clone = lastSlide[i].cloneNode(true)\r\n          clone.classList.add('cloned')\r\n          this.el.track.insertBefore(clone, this.el.slides[this.numItemReal - 1 + i].nextSibling)\r\n        }\r\n        for (let i = this.numItemReal; i > 0; --i) {\r\n          let clone = lastSlide[this.numItemReal - 1].cloneNode(true)\r\n          clone.classList.add('cloned')\r\n          this.el.track.insertBefore(clone, this.el.slides[0])\r\n        }\r\n      }\r\n      // Вычисляем общее количество слайдов\r\n      if (this.settings.loop) {\r\n        this.numItemAll = this.numItemReal * 3\r\n      } else {\r\n        this.numItemAll = this.numItemReal\r\n      }\r\n      // Обновление при изменении экрана\r\n      window.addEventListener('resize', this.getWidthDocument)\r\n      // Вешаем обработчиски событий на действия мыши\r\n      if ('ontouchstart' in window) {\r\n        this.el.track.addEventListener('touchstart', this.handleMouseDown)\r\n        this.el.track.addEventListener('touchend', this.handleMouseUp)\r\n        this.el.track.addEventListener('touchmove', this.handleMouseMove)\r\n      } else {\r\n        this.el.track.addEventListener('mousedown', this.handleMouseDown)\r\n        this.el.track.addEventListener('mouseup', this.handleMouseUp)\r\n        this.el.track.addEventListener('mousemove', this.handleMouseMove)\r\n      }\r\n      // Вычисляем ширину окна\r\n      this.getWidthDocument()\r\n    })\r\n  },\r\n  beforeDestroy () {\r\n    window.removeEventListener('resize', this.getWidthDocument)\r\n    if ('ontouchstart' in window) {\r\n      this.el.track.removeEventListener('touchstart', this.handleMouseDown)\r\n      this.el.track.removeEventListener('touchend', this.handleMouseUp)\r\n      this.el.track.removeEventListener('touchmove', this.handleMouseMove)\r\n    } else {\r\n      this.el.track.removeEventListener('mousedown', this.handleMouseDown)\r\n      this.el.track.removeEventListener('mouseup', this.handleMouseUp)\r\n      this.el.track.removeEventListener('mousemove', this.handleMouseMove)\r\n    }\r\n  },\r\n  methods: {\r\n    // Размер окна браузера\r\n    getWidthDocument () {\r\n      this.width.document = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    },\r\n    // Размеры слйдов и трека\r\n    getWidth () {\r\n      this.width.container = this.el.list.clientWidth\r\n      if(this.settings.items == 1) {\r\n        this.width.slide = this.width.container\r\n        this.width.track = this.width.container * this.numItemAll\r\n      } else {\r\n        this.width.slide = (this.width.container / this.settings.items) - ((this.settings.items - 1) * (this.settings.margin) / this.settings.items),\r\n            this.width.track = (this.width.container + this.settings.margin) * this.numItemAll\r\n      }\r\n    },\r\n    reload () {\r\n      // вычисляем брейкпоинты\r\n      if(this.responsive){\r\n        this.breakpoints = Object.keys(this.responsive)\r\n      }\r\n      // Устанавливаем свойства при отзывчивости\r\n      if(this.breakpoints){\r\n        this.breakpoints.forEach((width) => {\r\n          if(width <= this.width.document){\r\n            for (let key in this.responsive[width]) {\r\n              this.settings[key] = this.responsive[width][key]\r\n            }\r\n          }\r\n        })\r\n      }\r\n      // Вычисляем размеры\r\n      this.getWidth()\r\n      // Вычисляем отступы\r\n      if(this.settings.items == 1) {\r\n        this.settings.margin = 0\r\n      } else{\r\n        this.settings.margin = this.margin\r\n      }\r\n      // Устанавливаем размеры\r\n      for (let i = 0; i < this.numItemAll; ++i) {\r\n        this.el.slides[i].style.width = this.width.slide + 'px'\r\n        this.el.slides[i].style.marginRight = this.settings.margin + 'px'\r\n      }\r\n      // Удаляем активные слайды\r\n      for (let i = 0; i < this.numItemAll - 1; ++i) {\r\n        this.el.slides[i].classList.remove('active')\r\n      }\r\n      // Устанавливаем трек и назначаем активные слайды\r\n      if (this.settings.loop) {\r\n        this.transform = this.numItemReal * (this.width.slide + this.settings.margin)\r\n      } else {\r\n        this.transform = 0\r\n      }\r\n      // Устанавливаем активные слайды\r\n      this.addActiveClass(this.itemActive)\r\n      // Вычисляем количество дотов\r\n      this.numDot = Math.ceil(this.numItemReal / this.settings.items)\r\n    },\r\n    // Установка активнго слайда\r\n    addActiveClass (value) {\r\n      if (this.settings.loop) {\r\n        value += this.numItemReal\r\n      }\r\n      let superClass = value + Math.floor(((this.settings.items / 2)))\r\n      this.el.slides[superClass].classList.add('super')\r\n      for (let i = 0; i < this.settings.items; ++i) {\r\n        this.el.slides[value].classList.add('active')\r\n        ++value\r\n      }\r\n    },\r\n    // Перемещение слайдера\r\n    setSlide (n, transition = true) {\r\n      // Удаляем активный слайд\r\n      for (let i = 0; i < this.numItemAll - 1; ++i) {\r\n        this.el.slides[i].classList.remove('active', 'super')\r\n      }\r\n      // Перелистывание слайдера\r\n      if (this.settings.loop) {\r\n        this.transform = (n + this.numItemReal - 1) * (this.width.slide + this.settings.margin)\r\n      } else {\r\n        this.transform = n * (this.width.slide + this.settings.margin)\r\n      }\r\n      this.transform += (this.width.slide + this.settings.margin)\r\n      // Отключение анимации\r\n      if (!transition) {\r\n        this.settings.speed = 0\r\n      } else {\r\n        this.settings.speed = this.speed\r\n      }\r\n      if (this.settings.loop) {\r\n        if (n < 0) {\r\n          this.itemActive = this.numItemReal - 1\r\n          setTimeout(() => {\r\n            this.setSlide(this.itemActive, false)\r\n          }, this.speed)\r\n        }\r\n        else if (n >= this.numItemReal) {\r\n          this.itemActive = 0\r\n          setTimeout(() => {\r\n            this.setSlide(0, false)\r\n          }, this.speed)\r\n        } else {\r\n          this.itemActive = n\r\n        }\r\n        this.addActiveClass(this.itemActive)\r\n      } else {\r\n        if (n < 0) {\r\n          this.itemActive = 0\r\n        } else if (n >= this.numItemReal - this.settings.items) {\r\n          this.itemActive = this.numItemReal - this.settings.items\r\n        } else {\r\n          this.itemActive = n\r\n        }\r\n        this.transform = this.itemActive * (this.width.slide + this.settings.margin)\r\n        this.addActiveClass(this.itemActive)\r\n      }\r\n    },\r\n    // Следующий слайдер\r\n    nextSlide () {\r\n      this.setSlide(this.itemActive + this.settings.offset)\r\n    },\r\n    // Предидущий слайдер\r\n    prevSlide () {\r\n      this.setSlide(this.itemActive - this.settings.offset)\r\n    },\r\n    // Переключение дотами\r\n    setDot(n) {\r\n      if (this.settings.loop) {\r\n        this.setSlide((n - 1) * (this.settings.items))\r\n      } else {\r\n        if(n == this.numDot) {\r\n          let remainder = this.numItemReal % this.settings.items\r\n          if(remainder == 0) {\r\n            this.setSlide((n - 1) * (this.settings.items))\r\n          } else {\r\n            this.setSlide(this.numItemReal - this.settings.items)\r\n          }\r\n        } else {\r\n          this.setSlide((n - 1) * (this.settings.items))\r\n        }\r\n      }\r\n    },\r\n    // Действия мыши\r\n    handleMouseDown (e) {\r\n      if (!e.touches) {\r\n        e.preventDefault()\r\n      }\r\n      this.mouseDown = true\r\n      this.dragStartX = ('ontouchstart' in window) ? e.touches[0].clientX : e.clientX\r\n      this.dragStartY = ('ontouchstart' in window) ? e.touches[0].clientY : e.clientY\r\n    },\r\n    handleMouseMove (e) {\r\n      let positionX = ('ontouchstart' in window) ? e.touches[0].clientX : e.clientX\r\n      let positionY = ('ontouchstart' in window) ? e.touches[0].clientY : e.clientY\r\n      let dragDistanceX = Math.abs(positionX - this.dragStartX)\r\n      let dragDistanceY = Math.abs(positionY - this.dragStartY)\r\n      if (dragDistanceX > 3 * dragDistanceY) {\r\n        this.dragDistance = positionX - this.dragStartX\r\n        this.disableScroll()\r\n      }\r\n    },\r\n    handleMouseUp () {\r\n      this.mouseDown = false\r\n      this.enableScroll()\r\n    },\r\n    disableScroll () {\r\n      document.ontouchmove = function (e) {\r\n        e.preventDefault()\r\n      }\r\n    },\r\n    enableScroll () {\r\n      document.ontouchmove = function (e) {\r\n        return true\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    documentWidth: function () {\r\n      return this.width.document\r\n    }\r\n  },\r\n  watch: {\r\n    documentWidth () {\r\n      this.reload()\r\n    },\r\n    dragDistance () {\r\n      if (!this.mouseDown) {\r\n        return\r\n      }\r\n      if (this.dragDistance > this.swipeDistance) {\r\n        this.prevSlide()\r\n        this.handleMouseUp()\r\n      }\r\n      if (this.dragDistance < -1 * this.swipeDistance) {\r\n        this.nextSlide()\r\n        this.handleMouseUp()\r\n      }\r\n    }\r\n  },\r\n  updated: function () {\r\n    this.$nextTick(function () {\r\n      // Вычисляем активный дот\r\n      if (this.settings.loop) {\r\n        this.numDotActive = Math.ceil(this.itemActive / this.settings.items + 0.1)\r\n      } else {\r\n        let remainder = this.numItemReal % this.settings.items\r\n        if(remainder == 0) {\r\n          this.numDotActive = Math.ceil(this.itemActive / this.settings.items + 0.1)\r\n        } else {\r\n          if(this.itemActive >= this.numItemReal - this.settings.items) {\r\n            this.numDotActive = this.numDot\r\n          } else {\r\n            this.numDotActive = Math.ceil(this.itemActive / this.settings.items + 0.1)\r\n          }\r\n        }\r\n      }\r\n      // Переключение соседними слайдами\r\n      if(this.sibling) {\r\n        this.el.activeItem = this.$el.getElementsByClassName('v_slider__track')[0]\r\n        for (let i = 0; i < this.el.activeItem.children.length; ++i) {\r\n          this.el.activeItem.children[i].removeEventListener('click', this.nextSlide)\r\n          this.el.activeItem.children[i].removeEventListener('click', this.prevSlide)\r\n        }\r\n        this.el.activeItem = this.el.activeItem.getElementsByClassName('super')[0]\r\n        this.el.activeItem.nextElementSibling.addEventListener('click', this.nextSlide)\r\n        this.el.activeItem.previousElementSibling.addEventListener('click', this.prevSlide)\r\n      }\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.v_slider { overflow-x: hidden; text-align: center; }\r\n.v_slider__list { width: 100%; min-height: 1px; float: left; display: block; position: relative; margin-bottom: 40px; }\r\n.v_slider__track { position: relative; -ms-touch-action: pan-Y; -moz-backface-visibility: hidden; }\r\n.v_slider__track:after { content:\"\"; display: block; clear: both; }\r\n.v_slider__item { min-height: 1px; float: left; -webkit-backface-visibility: hidden; -webkit-touch-callout: none; }\r\n.v_slider__item.clone { z-index: 2; }\r\n.v_slider__dots { width: 100%; float: left; text-align: center; margin-bottom: 20px; }\r\n.v_slider__dots li { padding: 8px; display: inline-block; cursor: pointer; }\r\n.v_slider__dots li span { width: 8px; height: 8px; background: #dde2e6; float: left;  border-radius: 50%; }\r\n.v_slider__dots li span:hover { background: #fac301; }\r\n.v_slider__dots li.active span { background: #ff3f4d; }\r\n\r\n.v_slider__prev,\r\n.v_slider__next { outline: none; background:transparent; padding: 10px 15px; border:1px solid #ff3f4d; color:#ff3f4d; font-size: 20px; opacity: 0.9; }\r\n.v_slider__prev:hover,\r\n.v_slider__next:hover { border-color: #04a0c5; color:#04a0c5; cursor: pointer; }\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}