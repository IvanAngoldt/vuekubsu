{"ast":null,"code":"import { mapGetters, mapActions } from \"vuex\";\nexport default {\n  data() {\n    return {\n      tempInfo: {\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        text: \"\",\n        sending: false\n      }\n    };\n  },\n  methods: {\n    ...mapGetters([\"getValues\"]),\n    ...mapActions([\"sendForm\"]),\n    validateForm() {\n      const name = document.getElementById(\"inputName\").value;\n      const email = document.getElementById(\"inputEmail\").value;\n      const phone = document.getElementById(\"inputPhone\").value;\n      const text = document.getElementById(\"inputText\").value;\n      if (name != \"\" && email != \"\" && phone != \"\" && text != \"\") {\n        return true;\n      } else {\n        return {\n          error: \"Нельзя оставлять поля пустыми. Заполните форму корректно!\"\n        };\n      }\n    },\n    async sendFormInfo(e) {\n      e.preventDefault();\n      if (this.validateForm() == true) {\n        this.sendForm();\n      } else {\n        let err = this.validateForm();\n        alert(err.error);\n      }\n    }\n  },\n  mounted() {\n    this.tempInfo = this.getValues();\n  }\n};","map":{"version":3,"mappings":"AAiBA,SAASA,UAAU,EAAEC,UAAS,QAAS,MAAM;AAC7C,eAAe;EACbC,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QACRC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,IAAI,EAAE,EAAE;QACRC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,GAAGT,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC;IAC5B,GAAGC,UAAU,CAAC,CAAC,UAAU,CAAC,CAAC;IAC3BS,YAAY,GAAG;MACb,MAAMN,IAAG,GAAIO,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;MACvD,MAAMR,KAAI,GAAIM,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;MACzD,MAAMP,KAAI,GAAIK,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;MACzD,MAAMN,IAAG,GAAII,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;MACvD,IAAIT,IAAG,IAAK,EAAC,IAAKC,KAAI,IAAK,EAAC,IAAKC,KAAI,IAAK,EAAC,IAAKC,IAAG,IAAK,EAAE,EAAE;QAC1D,OAAO,IAAI;MACb,OAAO;QACL,OAAO;UACLO,KAAK,EAAE;QACT,CAAC;MACH;IACF,CAAC;IACD,MAAMC,YAAY,CAACC,CAAC,EAAE;MACpBA,CAAC,CAACC,cAAc,EAAE;MAClB,IAAI,IAAI,CAACP,YAAY,EAAC,IAAK,IAAI,EAAE;QAC/B,IAAI,CAACQ,QAAQ,EAAE;MACjB,OAAO;QACL,IAAIC,GAAE,GAAI,IAAI,CAACT,YAAY,EAAE;QAC7BU,KAAK,CAACD,GAAG,CAACL,KAAK,CAAC;MAClB;IACF;EACF,CAAC;EACDO,OAAO,GAAG;IACR,IAAI,CAAClB,QAAO,GAAI,IAAI,CAACmB,SAAS,EAAE;EAClC;AACF,CAAC","names":["mapGetters","mapActions","data","tempInfo","name","email","phone","text","sending","methods","validateForm","document","getElementById","value","error","sendFormInfo","e","preventDefault","sendForm","err","alert","mounted","getValues"],"sourceRoot":"","sources":["C:\\Users\\Anton\\Desktop\\AntonAnyfriev\\kubsu\\src\\components\\Form.vue"],"sourcesContent":["<template lang=\"\">\r\n    <div class=\"form\" @submit.prevent=\"sendFormInfo\">\r\n        <h2 class=\"orange\">Заполните форму</h2>\r\n        <input id=\"inputName\" type=\"text\" placeholder=\"Ваше имя\" v-model=\"tempInfo.name\">\r\n        <input id=\"inputPhone\" type=\"text\" placeholder=\"Телефон\" v-model=\"tempInfo.phone\">\r\n        <input id=\"inputEmail\" type=\"text\" placeholder=\"E-mail\" v-model=\"tempInfo.email\">\r\n        <input id=\"inputText\" type=\"text\" placeholder=\"Ваш комментарий\" style = \"height: 100px;\">\r\n        <div class=\"bottom-sector\">\r\n          <input type=\"checkbox\" name=\"checkbox\" id=\"checkbox_form\" style=\"20px\">\r\n          <span class=\"access\">Отправляя заявку, я даю согласие на <span class=\"red\">обработку своих персональных данных</span></span>\r\n        </div>\r\n        <button class=\"btn\">Отправить</button>\r\n    </div>\r\n    <div class=\"bg\"></div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      tempInfo: {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        text: \"\",\r\n        sending: false\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapGetters([\"getValues\"]),\r\n    ...mapActions([\"sendForm\"]),\r\n    validateForm() {\r\n      const name = document.getElementById(\"inputName\").value;\r\n      const email = document.getElementById(\"inputEmail\").value;\r\n      const phone = document.getElementById(\"inputPhone\").value;\r\n      const text = document.getElementById(\"inputText\").value;\r\n      if (name != \"\" && email != \"\" && phone != \"\" && text != \"\") {\r\n        return true;\r\n      } else {\r\n        return {\r\n          error: \"Нельзя оставлять поля пустыми. Заполните форму корректно!\"\r\n        };\r\n      }\r\n    },\r\n    async sendFormInfo(e) {\r\n      e.preventDefault();\r\n      if (this.validateForm() == true) {\r\n        this.sendForm();\r\n      } else {\r\n        let err = this.validateForm();\r\n        alert(err.error);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.tempInfo = this.getValues();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.bottom-sector {\r\n  margin-top: 10px;\r\n  display: flex;\r\n}\r\n\r\ninput#checkbox_form {\r\n  width: 40px;\r\n  margin-right: 10px;\r\n  margin-top: 0px;\r\n}\r\n\r\n.orange {\r\n  color:#f14d34;\r\n}\r\n\r\n.form{\r\n  width: 480px;\r\n  height: 450px;\r\n  position: sticky;\r\n  top: 300px;\r\n  left: 500px;\r\n  z-index: 2000;\r\n  background: #38447a;\r\n  overflow: visible;\r\n  border: 1px solid black;\r\n  border-radius: 10px;\r\n  padding: 30px;\r\n}\r\n\r\n.red {\r\n  color: #ff7777;\r\n}\r\n\r\n.btn {\r\n  margin-top: 15px;\r\n  width: 400px;\r\n  height: 30px;\r\n  background-color:#f14d34;\r\n  color: white;\r\n  font-size: large;\r\n}\r\n\r\n.form input{\r\n  width: 400px;\r\n  height: 40px;\r\n  margin-top: 10px;\r\n  border: 1px solid black;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  background: none;\r\n}\r\n\r\n.bg{\r\n  z-index: 999;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: fixed;\r\n  background-color: rgba(0, 0, 0, 0.705);\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}